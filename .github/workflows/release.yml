name: Create Release

on:
  push:
    branches: ["release"]

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Build
        run: |
          bun install
          bun run build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          path: "./dist/"

      - name: Get version
        id: version
        run: |
          echo "VERSION=$(jq -r .version package.json)" >> "$GITHUB_ENV"
          shell: bash

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v1.0.2
          release_name: Release 1.0.2
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/artifact.zip
          asset_name: onyx-gift-event.zip
          asset_content_type: application/zip
